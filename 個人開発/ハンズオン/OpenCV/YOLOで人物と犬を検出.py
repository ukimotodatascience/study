{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "画像の数: 1797\n",
      "ラベル例: [0 1 2 3 4 5 6 7 8 9]\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.datasets import load_digits\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "digits = load_digits()\n",
    "print(f\"画像の数: {len(digits.images)}\")\n",
    "print(f\"ラベル例: {digits.target[:10]}\")\n",
    "\n",
    "# サンプル表示\n",
    "plt.imshow(digits.images[0], cmap='gray')\n",
    "plt.title(f\"Label: {digits.target[0]}\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import cv2\n",
    "\n",
    "# ランダムに5個選んで横に並べた画像を作る\n",
    "indices = np.random.choice(len(digits.images), 5, replace=False)\n",
    "composite = np.hstack([digits.images[i] for i in indices])\n",
    "labels = [digits.target[i] for i in indices]\n",
    "\n",
    "# OpenCVで扱えるようuint8化\n",
    "composite = np.uint8(255 * composite / np.max(composite))\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# matplotlibで表示\n",
    "plt.imshow(composite, cmap=\"gray\")\n",
    "plt.title(\"Composed Digits\")\n",
    "plt.axis(\"off\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAgMAAACNCAYAAAAq/nnWAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8g+/7EAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAQEElEQVR4nO3dfUxW9f/H8dclIhC3c8FIlwhI1tK8Y2lJQGaheYdW5k0qs9RcW9m0TXMsUHGzpqiZplbgcNamBWnG0kSyzXS5tFLUYYGmhbdBuJmafH5/9OP6ioByrgKv+Dwfm5uc633O59xwcb04nHPeLmOMEQAAsFab270CAADg9iIMAABgOcIAAACWIwwAAGA5wgAAAJYjDAAAYDnCAAAAliMMAABgOcIAAACWIwwAuKXk5GQlJyc3y7JdLpcyMjI8mrdz585KS0v7V9cHsBFhAJCUm5srl8vl/ufv768OHTooJSVFy5cvV3V1tcfLLikpUUZGhsrLy/+9FW7A7t27lZGRocrKymYd52Y6d+7s3odt2rRRWFiYunfvrqlTp2rv3r3NPn5L7WugtWl7u1cA8Cbz5s1TdHS0rl69qoqKChUXF2vGjBlasmSJNm/erAceeMDxMktKSpSZmank5GR17tz531/p/7d7925lZmYqLS1NYWFhzTbOrfTs2VMzZ86UJFVXV+vw4cPauHGj1q5dq1dffVVLliypU3/p0iW1bevZj6KjR4+qTZv//U7TUvsaaG0IA8B1Bg8erPj4ePfXc+bMUVFRkYYOHarhw4fr8OHDCggIuI1r6P06duyo5557rs60RYsWady4ccrOzlZcXJymT5/ufs3f39/jsfz8/DyeF8D/8GcC4BYGDBig9PR0HT9+XOvXr6/z2pEjR/T000+rffv28vf3V3x8vDZv3ux+PTc3V88884wk6dFHH3WfQi8uLnbXFBYW6pFHHlFgYKCCg4M1ZMgQHTp0qN56HDlyRKNHj1Z4eLgCAgLUtWtXzZ07V5KUkZGh1157TZIUHR3tHuf60+Xr169Xnz59FBAQoPbt22vMmDH65Zdf6o2zZs0axcbGKiAgQA8++KC+/vprj/ddrYCAAOXl5al9+/bKysrS9c1SG7pmoLi4WPHx8fL391dsbKxWr16tjIwMuVyuOnXXXzNwq329b98+paSk6M4771RAQICio6M1efLkf7xtQGtAGACaYMKECZKkbdu2uacdOnRI/fr10+HDhzV79mwtXrxYgYGBSk1NVX5+viQpMTFRL7/8siTp9ddfV15envLy8nTfffdJkvLy8jRkyBAFBQVp0aJFSk9PV0lJiRISEup8kP/www/q27evioqKNGXKFC1btkypqanasmWLJGnUqFEaO3asJCk7O9s9Tnh4uCQpKytLEydOVFxcnJYsWaIZM2Zox44dSkxMrHONwfvvv69p06YpMjJSb775pvr376/hw4c3GBqcCgoK0siRI3Xq1CmVlJQ0Wrd//34NGjRI58+fV2Zmpp5//nnNmzdPBQUFN13+zfb1mTNn9MQTT6i8vFyzZ8/W22+/rfHjx2vPnj3/eLuAVsEAMDk5OUaS+fbbbxutCQ0NNb169XJ//dhjj5nu3bubP//80z2tpqbGPPzwwyYuLs49bePGjUaS2blzZ53lVVdXm7CwMDNlypQ60ysqKkxoaGid6YmJiSY4ONgcP368Tm1NTY37/2+99ZaRZMrKyurUlJeXGx8fH5OVlVVn+o8//mjatm3rnn7lyhUTERFhevbsaS5fvuyuW7NmjZFkkpKSGt03taKiosyQIUMafT07O9tIMp9++ql7miTzxhtvuL8eNmyYueOOO8ypU6fc00pLS03btm3NjT+yoqKizKRJk9xfN7av8/Pzb3l8AZtxZgBooqCgIPddBRcuXFBRUZFGjx6t6upqnTt3TufOndP58+eVkpKi0tJSnTp16qbL2759uyorKzV27Fj3/OfOnZOPj4/69u2rnTt3SpLOnj2rXbt2afLkyerUqVOdZdx42rwhn3zyiWpqajR69Og640RGRiouLs49zr59+3TmzBm9+OKLateunXv+tLQ0hYaGOtpXjQkKCpKkRu/OuHbtmr788kulpqaqQ4cO7uldunTR4MGDPR639oLKzz77TFevXvV4OUBrxQWEQBNdvHhRERERkqRjx47JGKP09HSlp6c3WH/mzBl17Nix0eWVlpZK+vuahIaEhIRIkn7++WdJUrdu3Txa79LSUhljFBcX1+Drvr6+kqTjx49LUr06X19fxcTEeDT2jS5evChJCg4ObvD1M2fO6NKlS+rSpUu91xqa1lRJSUl66qmnlJmZqezsbCUnJys1NVXjxo3jIkRAhAGgSU6ePKmqqir3B1JNTY0kadasWUpJSWlwnlt9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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "w = digits.images[0].shape[1]  # 各画像の幅（例：8）\n",
    "# 検出結果を表示（OpenCVの矩形・文字描画は使える）\n",
    "for i in range(5):\n",
    "    x = i * w\n",
    "    y = 0\n",
    "    cv2.rectangle(composite, (x, y), (x + w, y + w), (255,), 1)\n",
    "    cv2.putText(composite, str(labels[i]), (x+1, y+7), cv2.FONT_HERSHEY_SIMPLEX, 0.3, (255,), 1)\n",
    "\n",
    "# matplotlibで表示\n",
    "plt.imshow(composite, cmap=\"gray\")\n",
    "plt.title(\"Detected Digits\")\n",
    "plt.axis(\"off\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
